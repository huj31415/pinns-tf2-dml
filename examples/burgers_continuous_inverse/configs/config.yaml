defaults:
  - train
  - _self_

N_u: 2_000

time_domain:
  _target_: pinnstf2.data.TimeDomain
  t_interval: [0, 0.99]
  t_points: 100

spatial_domain:
  _target_: pinnstf2.data.Interval
  x_interval: [-1, 1]
  shape: [256, 1]

mesh:
  _target_: pinnstf2.data.Mesh
  root_dir: ${paths.data_dir}
  read_data_fn: ???

train_datasets:
  - mesh_sampler:
      _target_: pinnstf2.data.MeshSampler
      _partial_: true
      num_sample: ${N_u}
      solution:
        - u
      collection_points:
        - f

val_dataset:
  - mesh_sampler:
      _target_: pinnstf2.data.MeshSampler
      _partial_: true
      solution:
        - u

pred_dataset:
  - mesh_sampler:
      _target_: pinnstf2.data.MeshSampler
      _partial_: true
      solution:
        - u

net:
  _target_: pinnstf2.models.FCN
  layers: [2, 20, 20, 20, 20, 20, 20, 20, 20, 1]
  output_names:
    - u

trainer:
  max_epochs: 40000
  check_val_every_n_epoch: 40001

model:
  loss_fn: mse
  extra_variables:
    l1: 0.0
    l2: -6.0
  jit_compile: false

train: true
test: false
val: true
optimized_metric:
  error:
    - u
  extra_variables:
    - l1
    - l2

plotting:
  _target_: pinnstf2.utils.plot_burgers_continuous_inverse
  _partial_: true

seed: 1234
task_name: burgers_continuous_inverse

hydra:
  searchpath:
    - pkg://pinnstf2/conf